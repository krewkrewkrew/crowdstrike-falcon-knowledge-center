name: zCommunityId
visualization:
  options:
    columns: '[{"type":"field","fieldName":"@timestamp","format":"timestamp","width":180},{"type":"field","fieldName":"@rawstring","format":"json"}]'
    newestAtBottom: 'true'
    showOnlyFirstLine: 'false'
  type: list-view
$schema: https://schemas.humio.com/query/v0.1.0
timeInterval:
  isLive: false
  start: 1d
queryString: |-
  // Function for looking up the Community ID from a NetworkConnectIP event.
  //
  // To call this function in a query if you have it saved as part of a package, e.g. crowdstrike/fltr-core:
  // $"crowdstrike/fltr-core:zCommunityId"()
  //
  // To call this function in a query if you have it saved locally:
  // $"zCommunityId"()
  
  // Enrich NetworkConnectIP events with the Community ID.
  | case {
      #event_simpleName=NetworkConnectIP4
        | CommunityId:=communityId(
            proto=Protocol,
            sourceip=LocalAddressIP4,
            destinationip=RemoteAddressIP4,
            sourceport=LocalPort,
            destinationport=RemotePort
          ) ;
      #event_simpleName=NetworkConnectIP6
        | CommunityId:=communityId(
            proto=Protocol,
            sourceip=LocalAddressIP6,
            destinationip=RemoteAddressIP6,
            sourceport=LocalPort,
            destinationport=RemotePort
          ) ;
      // Reversed due to how the event is logged.
      #event_simpleName=NetworkReceiveAcceptIP4 IcmpType!=*
        | CommunityId:=communityId(
            proto=Protocol,
            sourceip=RemoteAddressIP4,
            destinationip=LocalAddressIP4,
            sourceport=RemotePort,
            destinationport=LocalPort
          ) ;
      // Reversed due to how the event is logged.
      #event_simpleName=NetworkReceiveAcceptIP4 IcmpType=*
        | CommunityId:=communityId(
            proto=Protocol,
            sourceip=RemoteAddressIP4,
            destinationip=LocalAddressIP4,
            sourceport=IcmpType,
            destinationport=LocalPort
          ) ;
      // Querying for this array is specific to a pivot detection.
      #event_simpleName!=* OR #streamingApiEvent=Event_DetectionSummaryEvent
        | EventType=Event_ExternalApiEvent NetworkAccesses[2].AccessTimestamp=*
        | CommunityId:=communityId(
            proto=NetworkAccesses[2].Protocol,
            sourceip=NetworkAccesses[2].LocalAddress,
            destinationip=NetworkAccesses[2].RemoteAddress,
            sourceport=NetworkAccesses[2].LocalPort,
            destinationport=NetworkAccesses[2].RemotePort
          );
      // Querying for NOT this array is the default filter.
      #event_simpleName!=* OR #streamingApiEvent=Event_DetectionSummaryEvent
        | EventType=Event_ExternalApiEvent NetworkAccesses[2].AccessTimestamp!=*
        | CommunityId:=communityId(
            proto=NetworkAccesses[0].Protocol,
            sourceip=NetworkAccesses[0].LocalAddress,
            destinationip=NetworkAccesses[0].RemoteAddress,
            sourceport=NetworkAccesses[0].LocalPort,
            destinationport=NetworkAccesses[0].RemotePort
          );
      * ;
    }