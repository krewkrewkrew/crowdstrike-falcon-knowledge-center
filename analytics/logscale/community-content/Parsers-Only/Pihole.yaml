name: Pihole
tests:
- 'Feb 15 12:17:41 dnsmasq[633]: /etc/pihole/custom.list api.localtest.test is 192.168.1.201'
- 'Feb 12 17:45:41 dnsmasq[633]: Apple iCloud Private Relay domain mask.icloud.com
  is NXDOMAIN'
- 'Feb 12 18:11:32 dnsmasq[633]: gravity blocked events.statsigapi.net is 0.0.0.0'
- 'Feb 12 17:45:10 dnsmasq[633]: read /etc/hosts - 8 names'
- 'Feb 12 17:45:10 dnsmasq[633]: read /etc/pihole/custom.list - 6 names'
- 'Feb 12 17:45:10 dnsmasq[633]: read /etc/pihole/local.list - 0 names'
- 'Feb 12 18:00:55 dnsmasq[633]: Pi-hole hostname pi.hole is 192.168.1.148'
- 'Feb 12 17:36:04 dnsmasq[633]: special domain mask.icloud.com is NXDOMAIN'
- 'Feb 12 17:34:47 dnsmasq[633]: reply gateway.fe2.apple-dns.net is 17.248.213.70'
- 'Feb 11 18:46:24 dnsmasq[633]: cached time.g.aaplimg.com is 17.253.14.251'
- 'Feb 11 18:46:24 dnsmasq[633]: gravity blocked telemetry-in.battle.net is NODATA'
- 'Feb 11 18:46:07 dnsmasq[633]: forwarded pihole.it-runs.de to 208.67.220.220'
- 'Feb 11 18:43:49 dnsmasq[633]: query[A] app.warp.dev from 192.168.1.174'
fieldsToBeRemovedBeforeParsing: []
$schema: https://schemas.humio.com/parser/v0.2.0
script: |-
  /*
      Pihole query log parser v0.2

      Author: Sebastian Selig
      Date:   02/12/2024

      Description:
      ------------
      To use this parser, please activate the query logging at
      http://pi.hole/admin/settings.php

      Collect the logs via HumioLogCollector
      sources:
        var_log:
          type: file
          include: /var/log/pihole/pihole.log
          sink: logscale

      To work properly, add the user to the pihole group via:
      sudo usermod -a -G pihole humio-log-collector

      Changelog:
      ----------
      v0.2: - added custom list to log_type

      v0.1: - Inital parser

   */
  case {

    // query logs
    log_type := "query" | regex("^(?<timestamp>\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+)\\s+dnsmasq\\[(?<process_id>\\d+)\\]:\\s+(?<type>(?:gravity blocked|cached|config|forwarded|reply|special|query\\[(?<query_type>\\w+)\\]))\\s+(?<domain_name>[^\\s]+)(?:\\s+is\\s+|\\s+from\\s+|\\s+to\\s+)(?<dns_response>[^\\s]+(?:\\s+[^\\s]+)?)");

    // domain is
    log_type := "special" | regex("^(?<timestamp>\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+)\\s+dnsmasq\\[(?<process_id>\\d+)\\]:\\s+(?<special_name>.*?)\\sdomain\\s(?<domain>[^\\s]+)\\sis\\s(?<special_response>.+)$");

    // config
    log_type := "config" | regex("^(?<timestamp>\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+)\\s+dnsmasq\\[(?<process_id>\\d+)\\]:\\s+read\\s+(?<file_path>.+?)\\s+-\\s+(?<names_count>\\d+)\\s+names$");

    // custom list
    log_type := "custom_list" | regex("^(?<timestamp>\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+)\\s+dnsmasq\\[(?<process_id>\\d+)\\]:\\s+(?<file_path>\\/etc\\/pihole\\/[^\\s]+)\\s+(?<domain>[^\\s]+)\\sis\\s(?<ip_address>[^\\s]+)$");

    // other
    log_type := "other" | regex("^(?<timestamp>\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+)\\s+dnsmasq\\[(?<process_id>\\d+)\\]:\\s+Pi-hole\\s+hostname\\s+(?<hostname>.+?)\\s+is\\s+(?<ip_address>\\d+\\.\\d+\\.\\d+\\.\\d+)$");

  }
tagFields:
- log_type
